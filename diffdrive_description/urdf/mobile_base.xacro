<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:property name="base_length" value="0.243"/>
    <xacro:property name="base_width" value="0.15"/>
    <xacro:property name="base_height" value="0.13"/>
    <xacro:property name="wheel_radius" value="0.0325"/>
    <xacro:property name="wheel_length" value="0.026"/>
    <xacro:property name="caster_radius" value="${wheel_radius / 2.0}"/>

    <link name="base_footprint"/>

    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
            <origin xyz="0 0 ${base_height / 2.0}" rpy="0 0 0"/>
            <material name="white"/>
        </visual>
        <xacro:box_inertia m="5.0" l="${2*base_length}" w="${2*base_width}" h="${2*base_height}"
         xyz="0 0 ${2*base_height / 2.0}" rpy="0 0 0" />
        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
            <origin xyz="0 0 ${base_height / 2.0}" rpy="0 0 0"/>
        </collision>
    </link>

    <xacro:macro name="wheel_link" params="prefix">
        <link name="${prefix}_wheel_link">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <origin xyz="0 0 0" rpy="${pi/2.0} 0 0"/>
                <material name ="grey"/>
            </visual>
            <xacro:cylinder_inertia m="1.0" r="${2*wheel_radius}" h="${2*wheel_length}" xyz="0 0 0" rpy="${pi/2.0} 0 0"/>
            <collision>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <origin xyz="0 0 0" rpy="${pi/2.0} 0 0"/>
            </collision>
        </link>
    </xacro:macro>

    <xacro:wheel_link prefix="left"/>
    <xacro:wheel_link prefix="right"/>

    <link name="caster_wheel_link">
        <visual>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <material name="grey"/>
        </visual>
        <xacro:sphere_inertia m="0.5" r="${2*caster_radius}" xyz="0 0 0" rpy="0 0 0" />
        <collision>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </collision>
    </link>
    
    <joint name="base_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
    </joint>

    <joint name="base_right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel_link"/>
        <origin xyz="${-base_length / 4.0} ${-((base_width / 2.0) + (wheel_length/2.0))} 0" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit velocity="100" effort="100"/>
    </joint>

    <joint name="base_left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel_link"/>
        <origin xyz="${-base_length / 4.0} ${(base_width / 2.0) + (wheel_length/2.0)} 0" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit velocity="100" effort="100"/>
    </joint>

    <joint name="base_caster_wheel_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_wheel_link"/>
        <origin xyz="${base_length / 3.0} 0 ${-caster_radius}" rpy="0 0 0"/>
    </joint>

    <!-- LiDAR Link -->
    <link name="lidar_link">
    <visual>
        <geometry>
        <cylinder length="0.05" radius="0.03"/> <!-- adjust size if needed -->
        </geometry>
        <material name="black"/>
    </visual>
    </link>

    <!-- LiDAR Joint -->
    <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/> <!-- or chassis_link depending on your robot -->
    <child link="lidar_link"/>
    <origin xyz="0 0 0.15" rpy="0 0 0"/> <!-- adjust height to be above chassis -->
    </joint>

</robot>